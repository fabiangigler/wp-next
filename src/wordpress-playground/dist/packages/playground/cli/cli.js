import m from"fs";import g,{basename as R}from"path";import B from"yargs";import F from"express";import{SupportedPHPVersions as z,PHPResponse as E}from"@php-wasm/universal";import{logger as f}from"@php-wasm/logger";import{runBlueprintSteps as I,compileBlueprint as x}from"@wp-playground/blueprints";import{EmscriptenDownloadMonitor as C,ProgressTracker as k}from"@php-wasm/progress";import{loadNodeRuntime as D,createNodeFsMountHandler as Z}from"@php-wasm/node";import{RecommendedPHPVersion as q,zipDirectory as M}from"@wp-playground/common";import{bootWordPress as O}from"@wp-playground/wordpress";import{rootCertificates as A}from"tls";import{createHash as L}from"crypto";import y from"fs-extra";import U from"os";async function V(e){const t=F(),r=await new Promise((i,d)=>{const o=t.listen(e.port,()=>{const u=o.address();u===null||typeof u=="string"?d(new Error("Server address is not available")):i(o)})});t.use("/",async(i,d)=>{const o=await e.handleRequest({url:i.url,headers:_(i),method:i.method,body:await j(i)});d.statusCode=o.httpStatusCode;for(const u in o.headers)d.setHeader(u,o.headers[u]);d.end(o.bytes)});const w=r.address().port;await e.onBind(w)}const j=async e=>await new Promise(t=>{const r=[];e.on("data",p=>{r.push(p)}),e.on("end",()=>{t(Buffer.concat(r))})}),_=e=>{const t={};if(e.rawHeaders&&e.rawHeaders.length)for(let r=0;r<e.rawHeaders.length;r+=2)t[e.rawHeaders[r].toLowerCase()]=e.rawHeaders[r+1];return t};function N(e){return/^latest$|^trunk$|^nightly$|^(?:(\d+)\.(\d+)(?:\.(\d+))?)((?:-beta(?:\d+)?)|(?:-RC(?:\d+)?))?$/.test(e)}const v=g.join(U.homedir(),".wordpress-playground");async function T(e="latest",t){const r=await W(e);return await $(r.url,`${r.version}.zip`,t)}async function J(e){return await $("https://github.com/WordPress/sqlite-database-integration/archive/refs/heads/main.zip","sqlite.zip",e)}async function $(e,t,r){const p=g.join(v,t);return y.existsSync(p)||(y.ensureDirSync(v),await Y(e,p,r)),H(p)}async function Y(e,t,r){const w=(await r.monitorFetch(fetch(e))).body.getReader(),i=y.createWriteStream(t);for(;;){const{done:d,value:o}=await w.read();if(o&&i.write(o),d)break}i.close(),i.closed||await new Promise((d,o)=>{i.on("finish",u=>{u?o(u):d(null)})})}function H(e,t){return new File([y.readFileSync(e)],t??R(e))}async function W(e="latest"){if(e.startsWith("https://")||e.startsWith("http://")){const r=L("sha1");r.update(e);const p=r.digest("hex");return{url:e,version:"custom-"+p.substring(0,8)}}if(e==="trunk"||e==="nightly")return{url:"https://wordpress.org/nightly-builds/wordpress-latest.zip",version:"nightly-"+new Date().toISOString().split("T")[0]};let t=await fetch("https://api.wordpress.org/core/version-check/1.7/?channel=beta").then(r=>r.json());t=t.offers.filter(r=>r.response==="autoupdate");for(const r of t){if(e==="beta"&&r.version.includes("beta"))return{url:r.download,version:r.version};if(e==="latest")return{url:r.download,version:r.version};if(r.version.substring(0,e.length)===e)return{url:r.download,version:r.version}}return{url:`https://wordpress.org/wordpress-${e}.zip`,version:e}}async function K(){const e=await B(process.argv.slice(2)).usage("Usage: wp-playground <command> [options]").positional("command",{describe:"Command to run",type:"string",choices:["server","run-blueprint","build-snapshot"]}).option("outfile",{describe:"When building, write to this output file.",type:"string",default:"wordpress.zip"}).option("port",{describe:"Port to listen on when serving.",type:"number",default:9400}).option("php",{describe:"PHP version to use.",type:"string",default:q,choices:z}).option("wp",{describe:"WordPress version to use.",type:"string",default:"latest"}).option("mount",{describe:"Mount a directory to the PHP runtime. You can provide --mount multiple times. Format: /host/path:/vfs/path",type:"array",string:!0}).option("mountBeforeInstall",{describe:"Mount a directory to the PHP runtime before installing WordPress. You can provide --mount-before-install multiple times. Format: /host/path:/vfs/path",type:"array",string:!0}).option("login",{describe:"Should log the user in",type:"boolean",default:!1}).option("blueprint",{describe:"Blueprint to execute.",type:"string"}).option("skipWordPressSetup",{describe:"Do not download, unzip, and install WordPress. Useful for mounting a pre-configured WordPress directory at /wordpress.",type:"boolean",default:!1}).option("quiet",{describe:"Do not output logs and progress messages.",type:"boolean",default:!1}).showHelpOnFail(!1).check(s=>{if(s.wp!==void 0&&!N(s.wp))try{new URL(s.wp)}catch{throw new Error('Unrecognized WordPress version. Please use "latest", a URL, or a numeric version such as "6.2", "6.0.1", "6.2-beta1", or "6.2-RC1"')}if(s.blueprint!==void 0){const l=g.resolve(process.cwd(),s.blueprint);if(!m.existsSync(l))throw new Error("Blueprint file does not exist");const a=m.readFileSync(l,"utf-8");try{s.blueprint=JSON.parse(a)}catch{throw new Error("Blueprint file is not a valid JSON file")}}return!0});e.wrap(e.terminalWidth());const t=await e.argv;t.quiet&&(f.handlers=[]);async function r(s){const{php:l,reap:a}=await o.processManager.acquirePHPInstance();try{await l.run({code:`<?php 
				$zip = new ZipArchive();
				if(false === $zip->open('/tmp/build.zip', ZipArchive::CREATE | ZipArchive::OVERWRITE)) {
					throw new Exception('Failed to create ZIP');
				}
				$files = new RecursiveIteratorIterator(
					new RecursiveDirectoryIterator('/wordpress')
				);
				foreach ($files as $file) {
					echo $file . PHP_EOL;
					if (!$file->isFile()) {
						continue;
					}
					$zip->addFile($file->getPathname(), $file->getPathname());
				}
				$zip->close();
				
			`});const n=l.readFileAsBuffer("/tmp/build.zip");m.writeFileSync(s,n)}finally{a()}}function p(s,l){const a=l.map(n=>{const[c,P]=n.split(":");return{hostPath:g.resolve(process.cwd(),c),vfsPath:P}});for(const n of a)s.mkdir(n.vfsPath),s.mount(n.vfsPath,Z(n.hostPath))}function w(){let s;t.blueprint?s=t.blueprint:s={preferredVersions:{php:t.php,wp:t.wp},login:t.login};const l=new k;let a="",n=!1;return l.addEventListener("progress",c=>{n||(c.detail.progress===100&&(n=!0),a=c.detail.caption||a||"Running the Blueprint",process.stdout.write(`\r\x1B[K${a.trim()} â€“ ${c.detail.progress}%`),n&&process.stdout.write(`
`))}),x(s,{progress:l})}const i=t._[0];["run-blueprint","server","build-snapshot"].includes(i)||(e.showHelp(),process.exit(1));const d=w();let o,u=!1;f.log("Starting a PHP server..."),V({port:t.port,onBind:async s=>{const l=`http://127.0.0.1:${s}`;f.log(`Setting up WordPress ${t.wp}`);let a;const n=new C;t.skipWordPressSetup||(n.addEventListener("progress",h=>{const b=Math.round(Math.min(100,100*h.detail.loaded/h.detail.total));t.quiet||process.stdout.write(`\rDownloading WordPress ${b}%...    `)}),a=await W(t.wp));const c=g.join(v,`prebuilt-wp-content-for-wp-${a.version}.zip`),P=a?m.existsSync(c)?H(c):T(a.url,n):void 0;o=await O({siteUrl:l,createPhpRuntime:async()=>await D(d.versions.php),wordPressZip:P,sqliteIntegrationPluginZip:J(n),sapiName:"cli",createFiles:{"/internal/shared/ca-bundle.crt":A.join(`
`)},phpIniEntries:{"openssl.cafile":"/internal/shared/ca-bundle.crt",allow_url_fopen:"1",disable_functions:""},hooks:{async beforeWordPressFiles(h){t.mountBeforeInstall&&p(h,t.mountBeforeInstall)}}});const S=await o.getPrimaryPhp();if(a&&!t.mountBeforeInstall&&m.writeFileSync(c,await M(S,"/wordpress")),t.mount&&p(S,t.mount),u=!0,d){const{php:h,reap:b}=await o.processManager.acquirePHPInstance();try{f.log("Running the Blueprint..."),await I(d,h),f.log("Finished running the blueprint")}finally{b()}}i==="build-snapshot"?(await r(t.outfile),f.log(`WordPress exported to ${t.outfile}`),process.exit(0)):i==="run-blueprint"?(f.log("Blueprint executed"),process.exit(0)):f.log(`WordPress is running on ${l}`)},async handleRequest(s){return u?await o.request(s):E.forHttpCode(502,"WordPress is not ready yet")}})}K();
